import type { AuthType, BlockBody, CorbadoApp, ProcessCommon } from '@corbado/web-core';
import { BlockTypes, ScreenNames } from '../constants';
import type { ErrorTranslator } from '../errorTranslator';
import type { ProcessHandler } from '../processHandler';
import type { BlockDataPasskeyVerify } from '../types';
import { Block } from './Block';
export declare class PasskeyVerifyBlock extends Block<BlockDataPasskeyVerify> {
    #private;
    readonly data: BlockDataPasskeyVerify;
    readonly type = BlockTypes.PasskeyVerify;
    readonly initialScreen: ScreenNames;
    readonly authType: AuthType;
    constructor(app: CorbadoApp, flowHandler: ProcessHandler, common: ProcessCommon, errorTranslator: ErrorTranslator, blockBody: BlockBody);
    init(): void;
    getFormattedPhoneNumber: () => string;
    passkeyLogin(skipIfOnlyHybrid?: boolean): Promise<void>;
    initFallbackEmailOtp(): Promise<void>;
    initFallbackSmsOtp(): Promise<void>;
    initFallbackEmailLink(): Promise<void>;
    cancelPasskeyOperation(): void;
}
