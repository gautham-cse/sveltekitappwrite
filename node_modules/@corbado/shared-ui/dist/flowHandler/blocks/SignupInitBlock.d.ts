import type { CorbadoApp, GeneralBlockSignupInit, ProcessCommon, SocialProviderType } from '@corbado/web-core';
import { BlockTypes, ScreenNames } from '../constants';
import type { ErrorTranslator } from '../errorTranslator';
import type { ProcessHandler } from '../processHandler';
import type { BlockDataSignupInit, LoginIdentifiers } from '../types';
import { Block } from './Block';
export declare class SignupInitBlock extends Block<BlockDataSignupInit> {
    readonly data: BlockDataSignupInit;
    readonly type = BlockTypes.SignupInit;
    readonly authType: "signup";
    readonly initialScreen = ScreenNames.SignupInit;
    constructor(app: CorbadoApp, flowHandler: ProcessHandler, common: ProcessCommon, errorTranslator: ErrorTranslator, data: GeneralBlockSignupInit);
    startSocialVerify(providerType: SocialProviderType): Promise<void>;
    updateUserData(identifiers: LoginIdentifiers, fullName?: string): Promise<void>;
    switchToLogin(): void;
    finishSocialVerification(abortController: AbortController): Promise<void>;
}
