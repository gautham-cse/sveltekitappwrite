import type { AuthType } from '@corbado/web-core';
import type { BlockBody, CorbadoApp, ProcessCommon } from '@corbado/web-core';
import { BlockTypes, ScreenNames } from '../constants';
import type { ErrorTranslator } from '../errorTranslator';
import type { ProcessHandler } from '../processHandler';
import type { BlockDataPasskeyAppendAfterHybrid } from '../types';
import { Block } from './Block';
export declare class PasskeyAppendAfterHybridBlock extends Block<BlockDataPasskeyAppendAfterHybrid> {
    #private;
    readonly data: BlockDataPasskeyAppendAfterHybrid;
    readonly type = BlockTypes.PasskeyAppendAfterHybrid;
    readonly initialScreen = ScreenNames.PasskeyAppendAfterHybrid;
    readonly authType: AuthType;
    constructor(app: CorbadoApp, flowHandler: ProcessHandler, common: ProcessCommon, errorTranslator: ErrorTranslator, blockBody: BlockBody);
    cancelPasskeyOperation(): void;
    passkeyAppend(): Promise<void>;
    skipPasskeyAppend(): Promise<void>;
    skipBlockInFuture(skip: boolean): void;
}
