import type { CorbadoApp, ProcessCommon } from '@corbado/web-core';
import type { AuthType } from '@corbado/web-core';
import type { BlockBody } from '@corbado/web-core/dist/api/v2';
import { BlockTypes, ScreenNames } from '../constants';
import type { ErrorTranslator } from '../errorTranslator';
import type { ProcessHandler } from '../processHandler';
import type { BlockDataMissingFields, LoginIdentifiers } from '../types';
import { Block } from './Block';
export declare class MissingFieldsBlock extends Block<BlockDataMissingFields> {
    readonly data: BlockDataMissingFields;
    readonly type = BlockTypes.MissingFields;
    readonly initialScreen = ScreenNames.MissingFields;
    readonly authType: AuthType;
    constructor(app: CorbadoApp, flowHandler: ProcessHandler, common: ProcessCommon, errorTranslator: ErrorTranslator, blockBody: BlockBody);
    updateUserData(identifiers: Omit<LoginIdentifiers, 'email'>): Promise<void>;
}
