import type { AuthType, BlockBody, CorbadoApp, ProcessCommon } from '@corbado/web-core';
import { BlockTypes, ScreenNames } from '../constants';
import type { ErrorTranslator } from '../errorTranslator';
import type { ProcessHandler } from '../processHandler';
import type { BlockDataPhoneVerify } from '../types';
import { Block } from './Block';
export declare class PhoneVerifyBlock extends Block<BlockDataPhoneVerify> {
    readonly data: BlockDataPhoneVerify;
    readonly type = BlockTypes.PhoneVerify;
    readonly initialScreen = ScreenNames.PhoneOtp;
    readonly authType: AuthType;
    constructor(app: CorbadoApp, flowHandler: ProcessHandler, common: ProcessCommon, errorTranslator: ErrorTranslator, blockBody: BlockBody);
    getFormattedPhoneNumber: () => string;
    showEditPhone(): void;
    showPhoneOtpScreen(): void;
    validateCode(code: string): Promise<void>;
    resendCode(): Promise<void>;
    updatePhone(value: string): Promise<string | undefined>;
}
