import './styles/index.css';
export declare const i18n: {
    en: {
        signup: {
            "signup-init": {
                "signup-init": {
                    header: string;
                    subheader: string;
                    text_login: string;
                    button_login: string;
                    button_submit: string;
                    textField_fullName: string;
                    textField_username: string;
                    textField_email: string;
                    textField_phone: string;
                    text_divider: string;
                    social_signup: {
                        google: string;
                        microsoft: string;
                        github: string;
                        default: string;
                    };
                };
            };
            "passkey-append": {
                "passkey-append": {
                    header: {
                        create: string;
                        append: string;
                    };
                    body_point1: string;
                    body_point2: string;
                    platformBasedText: {
                        windows: {
                            body_point1: string;
                            body_point2: string;
                        };
                        apple: {
                            body_point1: string;
                            body_point2: string;
                        };
                        android: {
                            body_point1: string;
                            body_point2: string;
                        };
                    };
                    body_subtext: string;
                    button_start: {
                        create: string;
                        append: string;
                    };
                    button_skip: string;
                    text_divider: string;
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                        phone: string;
                    };
                };
                "edit-user-data": {
                    header: {
                        username: string;
                        email: string;
                        phone: string;
                    };
                    button_submit: string;
                    button_cancel: string;
                };
                "passkey-error": {
                    header: string;
                    body: string;
                    text_divider: string;
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                        phone: string;
                    };
                    button_tryAgain: string;
                    button_cancel: string;
                };
            };
            "passkey-appended": {
                "passkey-appended": {
                    header: string;
                    subheader: string;
                    body: string;
                    button: string;
                };
            };
            "email-verify": {
                "email-otp": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    body_resend: string;
                    button_resend: string;
                    button_resendWaitingText: string;
                    button_gmail: string;
                    button_outlook: string;
                    button_yahoo: string;
                    button_icloud: string;
                };
                "email-link-sent": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    body_resend: string;
                    button_resend: string;
                    button_resendWaitingText: string;
                    button_gmail: string;
                    button_outlook: string;
                    button_yahoo: string;
                    button_icloud: string;
                };
                "email-link-verification": {
                    header: string;
                    subheader: string;
                };
                "email-link-success": {
                    header: string;
                    subheader: {
                        isOldTab: string;
                        isNewTab: string;
                    };
                    body: string;
                };
                "email-link-error": {
                    subheader: string;
                    body: string;
                };
                "edit-email": {
                    header: string;
                    button_submit: {
                        emailOtp: string;
                        emailLink: string;
                    };
                    button_cancel: string;
                };
            };
            "phone-verify": {
                "phone-otp": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    body_resend: string;
                    button_resend: string;
                    button_resendWaitingText: string;
                };
                "edit-phone": {
                    header: string;
                    button_submit: string;
                    button_cancel: string;
                };
            };
            "social-link-verification": {
                header: string;
                subheader: string;
            };
            "missing-fields": {
                header: string;
                subheader: string;
                button: string;
            };
        };
        login: {
            "login-init": {
                "login-init": {
                    header: string;
                    subheader: string;
                    text_signup: string;
                    button_signup: string;
                    button_submit: string;
                    textField: {
                        email: string;
                        username: string;
                        emailOrUsername: string;
                        phone: string;
                    };
                    button_switchToAlternate: {
                        email: string;
                        username: string;
                        emailOrUsername: string;
                        phone: string;
                    };
                    text_divider: string;
                    social_signup: {
                        google: string;
                        microsoft: string;
                        github: string;
                        default: string;
                    };
                    last_identifier: {
                        title: string;
                        text_skip: string;
                        button_skip: string;
                    };
                };
            };
            "passkey-verify": {
                "passkey-background": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                        phone: string;
                    };
                };
                "passkey-hybrid": {
                    header: string;
                    body_prompt: string;
                    body_passkeyVerificationMethod1: string;
                    body_passkeyVerificationMethod2: string;
                    button_login: string;
                    text_divider: string;
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                        phone: string;
                    };
                };
                "passkey-error-light": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    text_divider: string;
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                        phone: string;
                    };
                    button_tryAgain: string;
                    subtext_tryAgain: string;
                };
                "passkey-error": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    text_divider: string;
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                        phone: string;
                    };
                    button_tryAgain: string;
                };
            };
            "passkey-append-after-hybrid": {
                "passkey-append-after-hybrid": {
                    header: string;
                    body: string;
                    text_dontShowAgain: string;
                    button_appendPasskey: string;
                    button_continue: string;
                };
            };
            "email-verify": {
                "email-otp": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    postLoginVerification: {
                        header: string;
                        body_title: string;
                        body_description: string;
                    };
                    body_resend: string;
                    button_resend: string;
                    button_resendWaitingText: string;
                    button_gmail: string;
                    button_outlook: string;
                    button_yahoo: string;
                    button_icloud: string;
                };
                "email-link-sent": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    postLoginVerification: {
                        header: string;
                        body_title: string;
                        body_description: string;
                    };
                    body_resend: string;
                    button_resend: string;
                    button_resendWaitingText: string;
                    button_gmail: string;
                    button_outlook: string;
                    button_yahoo: string;
                    button_icloud: string;
                };
                "email-link-verification": {
                    header: string;
                    subheader: string;
                };
                "email-link-success": {
                    header: string;
                    subheader: {
                        isOldTab: string;
                        isNewTab: string;
                    };
                    body: string;
                };
                "email-link-error": {
                    subheader: string;
                    body: string;
                };
            };
            "phone-verify": {
                "phone-otp": {
                    header: string;
                    body_title: string;
                    body_description: string;
                    postLoginVerification: {
                        header: string;
                        body_title: string;
                        body_description: string;
                    };
                    body_resend: string;
                    button_resend: string;
                    button_resendWaitingText: string;
                };
            };
            "social-link-verification": {
                header: string;
                subheader: string;
            };
        };
        errors: {
            confirm_process_abort: {
                header: string;
                subheader: string;
                confirm: string;
                back: string;
            };
            missing_identifier_type: {
                username: string;
                email: string;
                phone: string;
            };
            missing_full_name: string;
            identifier_already_in_use: {
                username: string;
                email: string;
                phone: string;
            };
            identifier_invalid_format: {
                username: string;
                email: string;
                phone: string;
            };
            identifier_not_allowed: string;
            login_identifier_unknown_user: string;
            invalid_conditional_ui_login: string;
            no_fallback_available: string;
            invalidName: string;
            passkeyChallengeCancelled: string;
            userAlreadyExists: string;
            passkeyAlreadyExists: string;
            unknownUser: string;
            noPasskeyAvailable: string;
            onlyHybridPasskeyAvailable: string;
            invalidPasskey: string;
            "invalid_challenge_solution_email-otp": string;
            "invalid_challenge_solution_email-link": string;
            "invalid_challenge_solution_phone-otp": string;
            noConditionalUiSupport: string;
            conditionalUiUnconfirmedCredential: string;
            unknown: string;
            unexpectedError: {
                withCustomerSupport: string;
                noCustomerSupport: string;
            };
            componentUnavailable: {
                header: string;
                subheader: string;
                body_withCustomerSupport: string;
                body_noCustomerSupport: string;
                button: string;
            };
        };
        "passkey-list": {
            title: string;
            warning_notLoggedIn: string;
            message_noPasskeys: string;
            button_createPasskey: string;
            badge: {
                synced: string;
                hybrid: string;
                seen: string;
            };
            field_created: string;
            field_lastUsed: string;
            dialog_delete: {
                header: string;
                body: string;
                button_cancel: string;
                button_confirm: string;
            };
            dialog_passkeyAlreadyExists: {
                header: string;
                body: string;
                button_confirm: string;
            };
            dialog_passkeysNotSupported: {
                header: string;
                body: string;
                button_confirm: string;
            };
        };
        user: {
            header: string;
            name: string;
            username: string;
            email: string;
            phone: string;
            social: string;
            verified: string;
            unverified: string;
            warning_notLoggedIn: string;
            providers: {
                google: string;
                microsoft: string;
                github: string;
            };
        };
    };
    de: {
        authentication: {
            signup: {
                start: {
                    header: string;
                    subheader: string;
                    button_login: string;
                    button_submit: string;
                    textField_name: string;
                    textField_email: string;
                };
                emailOtp: {
                    header: string;
                    body_text1: string;
                    body_text2: string;
                    button_verify: string;
                    button_sendOtpAgain: string;
                    button_back: string;
                };
                emailLinkSent: {
                    header: string;
                    body_text1: string;
                    body_text2: string;
                    button_sendLinkAgainWaitingText: string;
                    button_sendLinkAgain: string;
                    button_back: string;
                };
                emailLinkVerification: {
                    header: string;
                    button_back: string;
                };
                passkeyCreate: {
                    header: string;
                    headerButton_showPasskeyBenefits: string;
                    body: string;
                    button_start: string;
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                    };
                    button_back: string;
                };
                passkeyError: {
                    header: string;
                    body_errorMessage: string;
                    button_showPasskeyBenefits: string;
                    body_tryAgainMessage: {
                        emailOtp: string;
                        emailLink: string;
                    };
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                    };
                    button_retry: string;
                    button_back: string;
                    button_cancel: string;
                };
                passkeySuccess: {
                    header: string;
                    subheader: string;
                    body_text1: string;
                    body_text2: {
                        emailOtp: string;
                        emailLink: string;
                    };
                    body_text3: string;
                    button: string;
                };
                passkeyBenefits: {
                    header: string;
                    body_introduction: string;
                    body_loginMethods: string;
                    button_start: string;
                    button_skip: string;
                };
                passkeyPrompt: {
                    header: string;
                    button_showPasskeyBenefits: string;
                    button_start: string;
                    button_skip: string;
                };
            };
            login: {
                start: {
                    header: string;
                    subheader: string;
                    button_signup: string;
                    button_submit: string;
                    textField_email: string;
                };
                emailOtp: {
                    header: string;
                    body_text1: string;
                    body_text2: string;
                    button_verify: string;
                    button_sendOtpAgain: string;
                    button_back: string;
                };
                emailLinkSent: {
                    header: string;
                    body_text1: string;
                    body_text2: string;
                    button_sendLinkAgainWaitingText: string;
                    button_sendLinkAgain: string;
                    button_back: string;
                };
                emailLinkVerification: {
                    header: string;
                    button_back: string;
                };
                passkeyError: {
                    header: string;
                    body: {
                        emailOtp: string;
                        emailLink: string;
                    };
                    button_switchToAlternate: {
                        emailOtp: string;
                        emailLink: string;
                    };
                    button_retry: string;
                    button_back: string;
                    button_cancel: string;
                };
                passkeyAppend: {
                    header: string;
                    button_showPasskeyBenefits: string;
                    button_start: string;
                    button_skip: string;
                };
                passkeyBenefits: {
                    header: string;
                    body_introduction: string;
                    body_loginMethods: string;
                    button_start: string;
                    button_skip: string;
                };
            };
            unexpectedError: {
                header: string;
                subheader: string;
                body_withCustomerSupport: string;
                body_noCustomerSupport: string;
                button: string;
            };
        };
        errors: {
            invalidName: string;
            invalidFullname: string;
            passkeyChallengeCancelled: string;
            userAlreadyExists: string;
            passkeyAlreadyExists: string;
            unknownUser: string;
            noPasskeyAvailable: string;
            invalidPasskey: string;
            invalidOtp: string;
            invalidToken: string;
            noConditionalUiSupport: string;
            conditionalUiUnconfirmedCredential: string;
            unknownError: string;
        };
        passkeysList: {
            warning_notLoggedIn: string;
            message_noPasskeys: string;
            button_createPasskey: string;
            badge_synced: string;
            field_credentialId: string;
            field_created: string;
            field_lastUsed: string;
            field_status: string;
            dialog_delete: {
                header: string;
                body: string;
                button_cancel: string;
                button_delete: string;
            };
            dialog_passkeyAlreadyExists: {
                header: string;
                body: string;
                button_confirm: string;
            };
        };
    };
};
export * from './utils';
export * from './flowHandler';
export type { BehaviorSubject } from 'rxjs';
export declare const assets: {
    rightIcon: any;
    deleteIcon: any;
    passkeyDefaultIcon: any;
    appleIcon: any;
    yahooIcon: any;
    gmailIcon: any;
    outlookIcon: any;
    editIcon: any;
    emailIcon: any;
    cancelIcon: any;
    logoIcon: any;
    circleExclamationIcon: any;
    exclamationIcon: any;
    passkeyErrorIcon: any;
    passkeyAppendedIcon: any;
    passkeyAppendAfterHybridIcon: any;
    secureIcon: any;
    deviceIcon: any;
    emaiLinkSuccessIcon: any;
    expandIcon: any;
    personIcon: any;
    phoneIcon: any;
    firstPageIcon: any;
    githubIcon: any;
    githubDarkIcon: any;
    googleIcon: any;
    microsoftIcon: any;
    shieldIcon: any;
    syncIcon: any;
    visibilityIcon: any;
    addIcon: any;
    faceIdDefault: any;
    fingerprintDefault: any;
    faceIdApple: any;
    fingerprintApple: any;
    faceIdAndroid: any;
    fingerprintAndroid: any;
    faceIdWindows: any;
    fingerprintWindows: any;
    passkeyHybridIcon: any;
    passkeyHybridDarkIcon: any;
    lockIcon: any;
};
