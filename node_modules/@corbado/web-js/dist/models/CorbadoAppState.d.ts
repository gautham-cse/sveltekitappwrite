import type { SessionUser } from '@corbado/types';
import type { NonRecoverableError } from '@corbado/web-core';
import { CorbadoApp } from '@corbado/web-core';
import type { CorbadoConfig } from '../types/core';
export declare class CorbadoAppState {
    #private;
    constructor(corbadoAppProps: CorbadoConfig);
    init(): Promise<void>;
    get corbadoApp(): CorbadoApp;
    get corbadoAppProps(): CorbadoConfig;
    get shortSession(): string | undefined;
    get shortSessionChanges(): import("rxjs").BehaviorSubject<string | undefined>;
    get isAuthenticated(): boolean | undefined;
    get authStateChanges(): import("rxjs").BehaviorSubject<import("@corbado/web-core").AuthState>;
    get userChanges(): import("rxjs").BehaviorSubject<SessionUser | undefined>;
    get user(): SessionUser | undefined;
    get globalError(): NonRecoverableError | undefined;
    logout(): Promise<void>;
}
