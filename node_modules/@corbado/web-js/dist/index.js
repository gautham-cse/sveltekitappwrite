import*as e from"@corbado/react";import*as t from"@corbado/web-core";import*as s from"react";import*as r from"react-dom/client";var o={d:(e,t)=>{for(var s in t)o.o(t,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},a={};function i(e,t,s,r){if("a"===s&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?r:"a"===s?r.call(e):r?r.value:t.get(e)}function n(e,t,s,r,o){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?o.call(e,s):o?o.value=s:t.set(e,s),s}o.d(a,{B:()=>h.CorbadoThemes,Z:()=>U}),Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;const h=(c={CorbadoAuth:()=>e.CorbadoAuth,CorbadoProvider:()=>e.CorbadoProvider,CorbadoThemes:()=>e.CorbadoThemes,Login:()=>e.Login,PasskeyList:()=>e.PasskeyList,SignUp:()=>e.SignUp,User:()=>e.User},l={},o.d(l,c),l);var c,l;const u=(e=>{var t={};return o.d(t,e),t})({CorbadoApp:()=>t.CorbadoApp});var f,p,d,g,b,w;class m{constructor(e){f.set(this,void 0),p.set(this,void 0),d.set(this,void 0),g.set(this,void 0),b.set(this,void 0),w.set(this,void 0);const t=new u.CorbadoApp(e);t.sessionService.shortSessionChanges.subscribe((e=>{n(this,d,e,"f")})),t.sessionService.userChanges.subscribe((e=>{n(this,b,e,"f")})),t.sessionService.authStateChanges.subscribe((e=>{n(this,g,!!e,"f")})),n(this,f,t,"f"),n(this,p,e,"f")}async init(){const e=await i(this,f,"f").init();e.err&&n(this,w,e.val,"f")}get corbadoApp(){return i(this,f,"f")}get corbadoAppProps(){return i(this,p,"f")}get shortSession(){return i(this,d,"f")}get shortSessionChanges(){return i(this,f,"f").sessionService.shortSessionChanges}get isAuthenticated(){return i(this,g,"f")}get authStateChanges(){return i(this,f,"f").sessionService.authStateChanges}get userChanges(){return i(this,f,"f").sessionService.userChanges}get user(){return i(this,b,"f")}get globalError(){return i(this,w,"f")}logout(){return this.corbadoApp.sessionService.logout()}}f=new WeakMap,p=new WeakMap,d=new WeakMap,g=new WeakMap,b=new WeakMap,w=new WeakMap;const v=(e=>{var t={};return o.d(t,e),t})({default:()=>s.default}),C=(e=>{var t={};return o.d(t,e),t})({createRoot:()=>r.createRoot});var S,P,y,A,k;S=new WeakMap,P=new WeakMap,y=new WeakMap,A=new WeakMap,k=new WeakMap;const U=new class{constructor(){S.set(this,void 0),P.set(this,new Map),y.set(this,((e,t,s)=>{if(!i(this,S,"f"))throw new Error("Please call load() before mounting components");i(this,A,"f").call(this,e);const r=function(e,t,s,r){const o=(0,C.createRoot)(t),a={corbadoAppInstance:e.corbadoApp,...e.corbadoAppProps};return o.render(v.default.createElement((({providerProps:e,componentProps:t})=>v.default.createElement(h.CorbadoProvider,{...e},v.default.createElement(s,{...t}))),{providerProps:a,componentProps:r})),o}(i(this,S,"f"),e,t,s);i(this,P,"f").set(e,r)})),A.set(this,(e=>{if(!i(this,S,"f"))throw new Error("Please call load() before unmounting components");const t=i(this,P,"f").get(e);t&&t.unmount()})),k.set(this,(()=>{if(!i(this,S,"f"))throw new Error("Please call load() before using this library");return i(this,S,"f")}))}get user(){return i(this,k,"f").call(this).user}get shortSession(){return i(this,k,"f").call(this).shortSession}get shortSessionChanges(){return i(this,k,"f").call(this).shortSessionChanges}get userChanges(){return i(this,k,"f").call(this).userChanges}get isAuthenticated(){return i(this,k,"f").call(this).isAuthenticated}get authStateChanges(){return i(this,k,"f").call(this).authStateChanges}async load(e){const t=new m(e);await t.init(),n(this,S,t,"f")}mountAuthUI(e,t){i(this,y,"f").call(this,e,h.CorbadoAuth,t)}unmountAuthUI(e){i(this,A,"f").call(this,e)}mountSignUpUI(e,t){i(this,y,"f").call(this,e,h.SignUp,t)}unmountSignUpUI(e){i(this,A,"f").call(this,e)}mountLoginUI(e,t){i(this,y,"f").call(this,e,h.Login,t)}unmountLoginUI(e){i(this,A,"f").call(this,e)}mountPasskeyListUI(e){i(this,y,"f").call(this,e,h.PasskeyList,{})}unmountPasskeyListUI(e){i(this,A,"f").call(this,e)}mountUserUI(e){i(this,y,"f").call(this,e,h.User,{})}unmountUserUI(e){i(this,A,"f").call(this,e)}logout(){if(!i(this,S,"f"))throw new Error("Please call load() before logging out");return i(this,S,"f").logout()}getPasskeys(e){return i(this,k,"f").call(this).corbadoApp.sessionService.passkeyList(null!=e?e:new AbortController)}appendPasskey(){return i(this,k,"f").call(this).corbadoApp.sessionService.appendPasskey()}deletePasskey(e){return i(this,k,"f").call(this).corbadoApp.sessionService.passkeyDelete(e)}getFullUser(e){return i(this,k,"f").call(this).corbadoApp.sessionService.getFullUser(null!=e?e:new AbortController)}};var E=a.B,M=a.Z;export{E as CorbadoThemes,M as default};
//# sourceMappingURL=index.js.map